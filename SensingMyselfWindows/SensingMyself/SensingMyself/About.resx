<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>